{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Notary (NRY) interface specification",
    "description" : "The \"Notary\" (NRY) specification supports financial service innovation by defining a standard interface and protocol for recording financial grade transactions in a distributed ledger"
  },
  "host" : "nry.testpoint.io",
  "securityDefinitions" : {
    "JWT" : {
      "type" : "apiKey",
      "description" : "JWT token value prepended by `JWT`, for example: \n`JWT XXXXX.YYYYYYYYYYYYYYYYYYYYYYY.ZZZZZZ`\nYou can get your JWT for testpoint.io services at https://idp.testpoint.io/\n",
      "in" : "header",
      "name" : "Authorization"
    }
  },
  "parameters" : {
    "namespace" : {
      "name" : "namespace",
      "in" : "path",
      "description" : "`private` or `public`",
      "required" : true,
      "type" : "string",
      "default" : "public"
    },
    "docId" : {
      "name" : "doc_id",
      "in" : "path",
      "description" : "QmHash of the notarized document",
      "required" : true,
      "type" : "string"
    }
  },
  "paths" : {
    "/{namespace}/" : {
      "get" : {
        "summary" : "List of documents metadatas",
        "description" : "Return full list of all notarized documents for given namespace (public or private), with basic metadata and filtering/search capabilities.",
        "operationId" : "getNryDocumentsList",
        "parameters" : [ {
          "$ref" : "#/parameters/namespace"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of notary documents metadatas",
            "schema" : {
              "$ref" : "#/definitions/NryDocumentMetadataList"
            }
          },
          "401" : {
            "description" : "Wrong JWT auth (for /private/)"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "summary" : "Notarize new document",
        "security" : [ {
          "JWT" : [ ]
        } ],
        "description" : "multipart/form-data request to notarize some object.",
        "parameters" : [ {
          "$ref" : "#/parameters/namespace"
        }, {
          "description" : "object data, optionally with content-type and filename",
          "in" : "formData",
          "name" : "object",
          "type" : "file",
          "required" : true
        }, {
          "description" : "json file with parameters",
          "in" : "formData",
          "name" : "parameters",
          "type" : "file",
          "required" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "success"
          }
        }
      }
    },
    "/{namespace}/{doc_id}/" : {
      "get" : {
        "summary" : "Get document content",
        "description" : "Return notarize document content for given doc_id. If namespace is `private` then the check if given user can view this document is performed.",
        "operationId" : "getNryDocument",
        "parameters" : [ {
          "$ref" : "#/parameters/namespace"
        }, {
          "$ref" : "#/parameters/docId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document content (body), with content-type optionally provided (or `application/octet-stream` if unknown)"
          }
        }
      }
    },
    "/archives/" : {
      "get" : {
        "summary" : "Get list of archives",
        "description" : "Helper endpoint to see the list of already notarized items. Replaces gazette for debug purposes and easiness.\n",
        "responses" : {
          "200" : {
            "description" : "List of the archives"
          }
        }
      }
    }
  },
  "definitions" : {
    "NryDocumentMetadataList" : {
      "properties" : {
        "businesses" : {
          "description" : "list of found participants",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NryDocumentMetadata"
          }
        }
      }
    },
    "NryDocumentMetadata" : {
      "properties" : {
        "doc_id" : {
          "type" : "string"
        },
        "business" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        }
      }
    }
  }
}