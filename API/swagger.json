{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Notary (NRY) interface specification",
    "description" : "\"The \"Notary\" (NRY) specification supports financial service innovation by defining a standard interface and protocol for recording financial grade transactions in a distributed ledger\n\nAll moments of time are described in ISO 8601 datetime format with the timezone. This requirement is made to ensure timezone is passed, and client fully understands the moment of time which client wants to describe.\n\nThe jsonapi.org is used where it's possible.\n"
  },
  "host" : "nry.testpoint.io",
  "securityDefinitions" : {
    "JWT" : {
      "type" : "apiKey",
      "description" : "JWT token value prepended by `JWT`, for example: \n`JWT XXXXX.YYYYYYYYYYYYYYYYYYYYYYY.ZZZZZZ`\nYou can get your JWT for testpoint.io services at https://idp.testpoint.io/\n",
      "in" : "header",
      "name" : "Authorization"
    }
  },
  "parameters" : {
    "namespace" : {
      "name" : "namespace",
      "in" : "path",
      "description" : "`private` or `public`",
      "required" : true,
      "type" : "string",
      "default" : "public"
    },
    "docId" : {
      "name" : "doc_id",
      "in" : "path",
      "description" : "QmHash of the notarized document",
      "required" : true,
      "type" : "string"
    }
  },
  "paths" : {
    "/{namespace}/" : {
      "get" : {
        "summary" : "List of documents metadatas",
        "description" : "Return full list of all notarized documents for given namespace (public or private), with basic metadata and filtering/search capabilities.",
        "operationId" : "getNryDocumentsList",
        "parameters" : [ {
          "$ref" : "#/parameters/namespace"
        }, {
          "in" : "query",
          "name" : "restricted_list",
          "type" : "string",
          "required" : false,
          "description" : "comma-separated list of participant identifiers"
        }, {
          "in" : "query",
          "name" : "submitted_after",
          "type" : "string",
          "required" : false,
          "description" : "ISO 8601 date to filter the documents"
        }, {
          "in" : "query",
          "name" : "submitted_before",
          "type" : "string",
          "required" : false,
          "description" : "ISO 8601 date to filter the documents"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of notary documents metadatas",
            "schema" : {
              "$ref" : "#/definitions/NryDocumentMetadataList"
            }
          },
          "401" : {
            "description" : "Wrong JWT auth (for /private/)"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "summary" : "Notarize new document",
        "security" : [ {
          "JWT" : [ ]
        } ],
        "description" : "multipart/form-data request to notarize some object.",
        "parameters" : [ {
          "$ref" : "#/parameters/namespace"
        }, {
          "description" : "object data, optionally with content-type and filename",
          "in" : "formData",
          "name" : "object",
          "type" : "file",
          "required" : true
        }, {
          "description" : "json file with parameters",
          "in" : "formData",
          "name" : "parameters",
          "type" : "file",
          "required" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Document created, notarization queued",
            "schema" : {
              "$ref" : "#/definitions/NryDocumentMetadataStandalone"
            }
          }
        }
      }
    },
    "/{namespace}/{doc_id}/" : {
      "get" : {
        "summary" : "Get document content",
        "description" : "Return notarize document content for given doc_id. If namespace is `private` then the check if given user can view this document is performed.",
        "operationId" : "getNryDocument",
        "parameters" : [ {
          "$ref" : "#/parameters/namespace"
        }, {
          "$ref" : "#/parameters/docId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document content (body), with content-type optionally provided (or `application/octet-stream` if unknown)"
          }
        }
      }
    },
    "/archives/" : {
      "get" : {
        "summary" : "Get list of archives",
        "description" : "Helper endpoint to see the list of already notarized items. Replaces gazette for debug purposes and easiness.\n",
        "responses" : {
          "200" : {
            "description" : "List of the archives"
          }
        }
      }
    }
  },
  "definitions" : {
    "NryDocumentMetadataList" : {
      "properties" : {
        "links" : {
          "type" : "object",
          "description" : "standard JsonAPI links object"
        },
        "data" : {
          "description" : "documents metadatas list",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NryDocumentMetadata"
          }
        },
        "meta" : {
          "type" : "object",
          "description" : "standard JsonAPI meta object"
        }
      }
    },
    "NryDocumentMetadataStandalone" : {
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/NryDocumentMetadata"
        }
      }
    },
    "NryDocumentMetadata" : {
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "NryDocument"
        },
        "id" : {
          "type" : "string",
          "description" : "notary-unique internal document identifier, uuid4. Different users may send same file to notarize, having same doc_id but different UUID identifiers, which"
        },
        "attributes" : {
          "properties" : {
            "doc_id" : {
              "type" : "string",
              "description" : "QmHash of the document, uniquely describing the content"
            },
            "business" : {
              "type" : "string",
              "description" : "URN participant identifier of the document sender"
            },
            "location" : {
              "type" : "string",
              "description" : "relative URL where the notarized document may be found"
            },
            "created" : {
              "type" : "string",
              "description" : "ISO document creation time"
            },
            "durability" : {
              "type" : "string",
              "description" : "host till ISO datetime, after that date hosting MAY be provided, but not SHOULD be."
            },
            "ac_code" : {
              "description" : "ac_code field from spec describes publicity of the target items: HocDetails and notarized document."
            }
          }
        }
      }
    }
  }
}